library(GEOquery)
---
title: "Analysing Breast cancer"
output: word_document
---
## Introduction
Breast cancer is one the deadly tumors in women, and its incidence continues to increase. In this walk_through, I'll demonstrate my online learning summary, by
analyzing the data of Breast cancer
## Ubuntu scripting
gunzip GSE183947_fpkm
## R
From here on, move to R studio and start scripting
```{r include=FALSE}
library(dplyr)
library(tidyverse)
library(GEOquery)
```
##Reading the data
Dim helps get the dimension of the data
```{r echo=TRUE}
dat <- read.csv(file = 'data/GSE183947_fpkm.csv')
dim(dat)
```
## Metadata
Each Sample record is assigned a unique and stable GEO accession number. getGEO functions to download and parse information available from NCBI GEO. . (The size of the connection buffer (131072) was not large enough, thus to list a complete line: increased by setting the Sys..
```{r include=FALSE}
gse <- getGEO(GEO = 'GSE183947', GSEMatrix = TRUE)
Sys.setenv('VROOM_cONNECTION_SIZE' = 131072 * 1000)
gse
```
```{r echo=TRUE}
metadata <- pData(phenoData(gse[[1]]))
head(metadata)
```
##Select, mutate, rename
Renaming the columns of metadata.
%>% is an operator that pipes functions. This helps readability and productivity as it's easier to follow the flow of multiple functions through these pipes than going backwards when multiple function are nested.
rename is used to rename the column(title) while, the
mutate is used to rename the column below the title
Here, we selected only four columns which gave important information
```{r}
metadata.modified <- metadata %>%
select(1,10,11,17) %>%
rename(tissue = characteristics_ch1) %>%
rename(metastasis = characteristics_ch1.1)%>%
mutate(metastasis = gsub('metastasis:',"",metastasis))
```
##Reshapaing the data
As seen above, the data has 61 horizontal dimension.
We are going to chrip it down.
thereby :
x --> gene
CA.1... --> samples
value --> FPKM
```{r}
dat.long <- dat %>%
rename(gene=X)%>%
gather(key = 'samples', value = 'FPKM', -gene)
```
#Joining two files
Here we joined two files namely dat.long and metadata.
left_join(): includes all rows in x.
Refer <https://jobmanager1.tistory.com/54>
```{r}
dat.long <- dat.long %>%
left_join(.,metadata.modified, by = c('samples'='description'))
```
#Exploring the data
Using filter, group_by, summarize and arrange function
to explore the data.
```{r}
Exp <-dat.long %>%
filter(gene == 'BRCA1' | gene == 'BRCA2')%>%
group_by(gene, tissue)%>%
summarize(mean_FPKM = mean(FPKM),
median_FPKM = median(FPKM))%>%
arrange(-mean_FPKM)
```
library(GEOquery)
library(dplyr)
library(tidyverse)
library(GEOquery)
dat <- read.csv(file = 'data/GSE183947_fpkm.csv')
dim(dat)
gse
metadata.modified <- metadata %>%
select(1,10,11,17) %>%
rename(tissue = characteristics_ch1) %>%
rename(metastasis = characteristics_ch1.1)%>%
mutate(metastasis = gsub('metastasis:',"",metastasis))
metadata.modified <- metadata %>%
select(1,10,11,17) %>%
rename(tissue = characteristics_ch1) %>%
rename(metastasis = characteristics_ch1.1)%>%
mutate(metastasis = gsub('metastasis:',"",metastasis))
pwd
pwd()
getwd()
install.packages("devtools")
library(devtools)
library(statsr)
library(dplyr)
library(ggplot2)
library(statsr)
library(dplyr)
library(ggplot2)
data(nycflights)
names(nycflights)
str(nycflights)
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram()
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram(binwidth = 15)
ggplot(data = nycflights, aes(x = dep_delay)) +
geom_histogram(binwidth = 150)
rdu_flights <- nycflights %>%
filter(dest == 'RDU')
ggplot(data = rdu_flights, aes(x=dep_delay)) +
geom_histogram()
rdu_flights %>%
summarise(mean_dd = mean(dep_delay), sd_dd = sd(dep_delay),)
rdu_flights %>%
summarise(mean_dd = mean(dep_delay), sd_dd = sd(dep_delay),n= n())
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)
View(sfo_feb_flights)
dim(sfo_feb_flights)
ggplot(data = sfo_arrival, aes(x=dep_delay))+
geom_histogram()
sfo_arrival <- nycflights%>%
filter(dest == 'SFO')
ggplot(data = sfo_arrival, aes(x=dep_delay))+
geom_histogram()
library(statsr)
library(dplyr)
library(ggplot2)
library(statsr)
library(dplyr)
library(ggplot2)
data(nycflights)
names(nycflights)
str(nycflights)
ggplot(data = rdu_flights, aes(x=dep_delay)) +
geom_histogram(binwidth = 30)
rdu_flights <- nycflights %>%
filter(dest == 'RDU')
ggplot(data = rdu_flights, aes(x=dep_delay)) +
geom_histogram(binwidth = 30)
View(rdu_flights)
rdu_flights %>%
summarise(mean_dd = mean(dep_delay), sd_dd = sd(dep_delay),n= n())
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)
View(sfo_feb_flights)
summariseN(n())
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)
summariseN(n())
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)
summarise(n = n())
dim(sfo_feb_flights)
ggplot(data = sfo_feb_arrival, aes(x=dep_delay))+
geom_histogram(binwidth = 30)
ggplot(data = sfo_feb_flights, aes(x=dep_delay))+
geom_histogram(binwidth = 30)
ggplot(data = sfo_feb_flights, aes(x=dep_delay))+
geom_histogram(binwidth = 30) + geom_line()
ggplot(data = sfo_feb_flights, aes(x=dep_delay))+
geom_histogram(binwidth = 30) + geom_curve()
ggplot(data = sfo_feb_flights, aes(x=dep_delay))+
geom_histogram(binwidth = 30)
rdu_flights %>%
group_by(origin)%>%
summarise(mean_dd = mean(dep_delay),sd_dd(dep_delay),n=n())
rdu_flights %>%
group_by(origin)%>%
summarise(mean_dd = mean(dep_delay), sd_dd(dep_delay),n=n())
rdu_flights %>%
group_by(origin)%>%
summarise(mean_dd = mean(dep_delay), sd_dd = sd(dep_delay),n=n())
sfo_feb_flights%>%
group_by(carrier)%>%
summarise(med = median(arr_delay), iqr = IQR(arr_delay), n=n())
arrange(desc(iqr))
sfo_feb_flights%>%
group_by(carrier)%>%
summarise(med = median(arr_delay), iqr = IQR(arr_delay), n=n())
arrange(desc(iqr))
sfo_feb_flights%>%
group_by(carrier)%>%
summarise(med = median(arr_delay), iqr = IQR(arr_delay), n=n()) +
arrange(desc(iqr))
sfo_feb_flights%>%
group_by(carrier)%>%
summarise(med = median(arr_delay), iqr = arrange(desc(IQR(arr_delay))), n=n())
sfo_feb_flights%>%
group_by(carrier)%>%
mutate(iqr = IQR(arr_delay))%>%
arrange(desc(iqr))
sfo_feb_flights<-sfo_feb_flights %>%
group_by(carrier)%>%
mutate(iqr = IQR(arr_delay))%>%
arrange(desc(iqr))
sfo_feb_flights<-sfo_feb_flights %>%
group_by(carrier)%>%
mutate(iqr = summarise(IQR(arr_delay)))%>%
arrange(desc(iqr))
sfo_feb_flights<-sfo_feb_flights %>%
group_by(carrier)%>%
mutate(iqr = (IQR(arr_delay)))%>%
arrange(desc(iqr))
nycflights %>%
group_by(month) %>%
summarise(mean_dd = mean(dep_delay)) %>%
arrange(desc(mean_dd))
sfo_feb_flights%>%
group_by(carrier)%>%
summarise(iqr = IQR(arr_delay)))%>%
sfo_feb_flights%>%
group_by(carrier)%>%
summarise(iqr = IQR(arr_delay))%>%
arrange(desc(iqr))
ggplot(nycflights, aes(x = factor(month), y = dep_delay)) +
geom_boxplot()
mutate(dep_type = ifelse(dep_delay < 5, 'on time', 'delayed')
nycflights <- nycflights%>%
nycflights <- nycflights%>%
mutate(dep_type = ifelse(dep_delay < 5, 'on time', 'delayed'))
View(nycflights)
nycflights %>%
group_by(origin)%>%
summarise(ot_dep_rate = sum(dep_time == 'on time')/n())%>%
arrange(desc(ot_dep_rate))
nycflights %>%
group_by(origin)%>%
summarise(ot_dep_rate = sum(dep_type == 'on time')/n())%>%
arrange(desc(ot_dep_rate))
ggplot(data=nycflights, aes(x=origin, fill =dep_type))+
geom_bar()
rdu_flights_speed <- rdu_flights%>%
mutate(average_speed = distance*60/air_time)
View(rdu_flights_speed)
rdu_flights_speed <- rdu_flights%>%
mutate(average_speed = distance*60/air_time)%>%
select(average_speed,tailnum)
rdu_flights_speed <- rdu_flights%>%
mutate(average_speed = distance*60/air_time)%>%
arrange(select(average_speed,tailnum))
rdu_flights_speed <- rdu_flights%>%
select(average_speed,tailnum)%>%
mutate(average_speed = distance*60/air_time)%>%
rdu_flights_speed <- rdu_flights%>%
select(average_speed,tailnum)%>%
mutate(average_speed = distance*60/air_time)%>%
arrange(rdu_flights_speed)
rdu_flights_speed <- rdu_flights%>%
select(average_speed,tailnum)%>%
mutate(average_speed = distance*60/air_time)%>%
arrange(desc(rdu_flights_speed))
rdu_flights_speed <- rdu_flights%>%
mutate(average_speed = distance*60/air_time)%>%
rdu_flights_speed%>%
select(average_speed,tailnum)%>%
arrange(desc(rdu_flights))
rdu_flights_speed%>%
select(average_speed,tailnum)%>%
rdu_flights_speed%>%
select(average_speed,tailnum)%>%
arrange(desc(average_speed))
rdu_flights_speed <- rdu_flights%>%
mutate(average_speed = distance*60/air_time)%>%
rdu_flights_speed%>%
select(average_speed,tailnum)%>%
arrange(desc(average_speed))
rdu_flights_speed %>%
select(average_speed,tailnum)%>%
arrange(desc(average_speed))
rdu_flights_speed %>%
select(average_speed,tailnum) %>%
arrange(desc(average_speed))
ggplot(data= rdu_flights_speed, aes(x=average_speed, y=distance))
ggplot(data= rdu_flights_speed, aes(x=average_speed, y=distance))+
ggplot(data= rdu_flights_speed, aes(x=average_speed, y=distance))+
geom_point() + geom_line()
ggplot(data= rdu_flights_speed, aes(x=average_speed, y=distance))+
geom_point()
ggplot(data= rdu_flights_speed, aes(x=average_speed, y = distance))+
geom_point()
ggplot(data= rdu_flights_speed, aes(x=average_speed, y = distance))+
geom_point()
rdu_flights_speed <- rdu_flights%>%
mutate(average_speed = distance*60/air_time)%>%
rdu_flights_speed <- rdu_flights%>%
mutate(average_speed = distance*60/air_time)%>%
View(rdu_flights_speed)
View(rdu_flights_speed)
View(nycflights)
View(rdu_flights)
rdu_flights_spee <- rdu_flights%>%
mutate(average_speed = distance*60/air_time)%>%
View(nycflights)
View(nycflights)
View(rdu_flights)
View(rdu_flights_speed)
```{r}
rdu_flights_spee <- rdu_flights%>%
mutate(average_speed = distance*60/air_time)%>%
rdu_flights_spee <- rdu_flights %>%
mutate(average_speed = distance*60/air_time)%>%
rdu_flights_spee <- rdu_flights %>%
mutate(average_speed = distance*60/air_time) %>%
rdu_flight<- rdu_flights %>%
mutate(average_speed = distance*60/air_time) %>%
rdu_flights_speed %>%
select(average_speed,tailnum) %>%
arrange(desc(average_speed))
rdu_flight_speed<- rdu_flights %>%
mutate(average_speed = distance*60/air_time) %>%
rdu_flights_speed %>%
select(average_speed,tailnum) %>%
arrange(desc(average_speed))
library(statsr)
library(dplyr)
library(ggplot2)
data(nycflights)
force(nycflights)
View(nycflights)
ggplot(data = rdu_flights, aes(x=dep_delay)) +
geom_histogram(binwidth = 30)
rdu_flights <- nycflights %>%
filter(dest == 'RDU')
ggplot(data = rdu_flights, aes(x=dep_delay)) +
geom_histogram(binwidth = 30)
rdu_flights %>%
summarise(mean_dd = mean(dep_delay), sd_dd = sd(dep_delay),n= n())
rdu_flights %>%
group_by(origin)%>%
summarise(mean_dd = mean(dep_delay), sd_dd = sd(dep_delay),n=n())
flight_speed<- nycflights %>%
mutate(average_speed = distance*60/air_time) %>%
flight_speed<- nycflights %>%
mutate(average_speed = distance*60/air_time) %>%
flight_speed <- nycflights %>%
mutate(average_speed = distance*60/air_time)
flight_speed <- nycflights %>%
mutate(average_speed = distance*60/air_time)
View(flight_speed)
rdu_flights_speed %>%
select(average_speed,tailnum) %>%
arrange(desc(average_speed))
rdu_flights %>%
select(average_speed,tailnum) %>%
arrange(desc(average_speed))
flight_flights %>%
select(average_speed,tailnum) %>%
arrange(desc(average_speed))
flight_speed %>%
select(average_speed,tailnum) %>%
arrange(desc(average_speed))
View(flight_speed)
View(flight_speed)
ggplot(data= rdu_flight_speed, aes(x=average_speed, y = distance))+
geom_point() + geom_line()
ggplot(data= flight_speed, aes(x=average_speed, y = distance))+
geom_point() + geom_line()
##
```{r}
ggplot(data= flight_speed, aes(x=average_speed, y = distance))+
geom_point()
```
ggplot(data= flight_speed, aes(x=average_speed, y = distance))+
geom_point()
ggplot(data= flight_speed, aes(x=average_speed, y = distance))+
geom_point()
ggplot(data= flight_speed, aes(x=distance, y = average_speed))+
geom_point()
View(nycflights)
nycflights <- nycflights %>%
mutate(arr_type = ifelse(dep_delay < 5, 'on time', 'delayed'))
nycflights %>% group_by(dep_type)%>%
summarise(ot_arr_rate=sum(arr_type=="on time")/n())
nycflights <- nycflights %>%
mutate(arr_type=ifelse(arr_delay<=0,"on time","delayed"))
nycflights %>% group_by(dep_type)%>%
summarise(ot_arr_rate=sum(arr_type=="on time")/n())
setwd("C:/Users/DiNonA/Downloads/statistics/Data-Analysis-with-R-Specialization/Introduction to Probability and Data with R/Introduction to Data Project/Lab two/Quiz")
library(ggplot2)
library(statsr)
library(dplyr)
library(ggplot2)
data(nycflights)
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)
dim(sfo_feb_flights)
View(nycflights)
View(sfo_feb_flights)
ggplot(data = sfo_feb_flights, aes(x=arr_delay))+
geom_histogram(binwidth = 15)
ggplot(data = sfo_feb_flights, aes(x=arr_delay))+
geom_histogram(binwidth = 30)
ggplot(data = sfo_feb_flights, aes(x=arr_delay))+
geom_histogram(binwidth = 15)
sfo_feb_flights %>%
group(carrier) %>%
summarise(iqr = IQR(arr_delay)) %>%
arrange(desc(iqr))
sfo_feb_flights %>%
group_by(carrier) %>%
summarise(iqr = IQR(arr_delay)) %>%
arrange(desc(iqr))
nycflights %>%
group_by(month)%>%
summarise(mean_dd = mean(dep_delay)) %>%
arrange(desc(mean_dd))
nycflights %>%
group_by(month) %>%
summarise(median_dd = median(dep_delay)) %>%
arrange(desc(median_dd))
nycflights <- nycflights %>%
mutate(dep_type = ifelse(dep_delay <5, 'on time', 'delayed'))
nycflights <- nycflights %>%
group_by(origin) %>%
summarise(ot_dep_rate = sum(dep_time == 'on time')/n()) %>%
arrange(desc(ot_dep_rate))
nycflights <- nycflights %>%
group_by(origin) %>%
summarise(ot_dep_rate = sum(dep_time == 'on time')/n()) %>%
arrange(desc(ot_dep_rate))
nycflights <- nycflights %>%
mutate(dep_type = ifelse(dep_delay <5, 'on time', 'delayed'))
nycflights <- nycflights %>%
mutate(dep_type = ifelse(dep_delay <5, 'on time', 'delayed'))
nycflights <- nycflights %>%
mutate(dep_type = ifelse(dep_delay <5, 'on time', 'delayed'))
nycflights <- nycflights %>%
group_by(origin) %>%
summarise(ot_dep_rate = sum(dep_time == 'on time')/n()) %>%
arrange(desc(ot_dep_rate))
nycflights <- nycflights %>%
group_by(origin)%>%
summarise(ot_dep_rate = sum(dep_time == 'on time')/n()) %>%
arrange(desc(ot_dep_rate))
nycflights <- nycflights %>%
group_by(origin)%>%
summarise(ot_dep_rate = sum(dep_type == 'on time')/n()) %>%
arrange(desc(ot_dep_rate))
nycflights <- nycflights %>%
mutate(dep_type = ifelse(dep_delay <5, 'on time', 'delayed'))
View(nycflights)
View(nycflights)
data(nycflights)
nycflights <- nycflights %>%
mutate(dep_type = ifelse(dep_delay <5, 'on time', 'delayed'))
View(nycflights)
nycflights %>%
group_by(origin)%>%
summarise(ot_dep_rate = sum(dep_type == 'on time')/n()) %>%
arrange(desc(ot_dep_rate))
nycflights %>%
select(avg_speed, tailnum)%>%
arrange(desc(avg_speed))
nycflights <- nycflights %>%
mutate(avg_speed = (distance * 60)/air_time)
nycflights %>%
select(avg_speed, tailnum)%>%
arrange(desc(avg_speed))
ggplot(data= flight_speed, aes(x=distance, y = average_speed))+
geom_point()
ggplot(data= nycflights, aes(x=distance, y = average_speed))+
geom_point()
ggplot(data= nycflights, aes(x=distance, y = average_speed))+ geom_point()
ggplot(data= nycflights, aes(x=distance, y = avg_speed))+ geom_point()
final_q%>%
group_by(dep_type) %>%
summarise(ot_arr_rate = sum(arr_type == 'on time')/n())
final_q <- nycflights %>%
mutate(on_time = ifelse(arr_delay <0, 'on time', 'delayed'))
final_q%>%
group_by(dep_type) %>%
summarise(ot_arr_rate = sum(on_time == 'on time')/n())
final_q <- nycflights %>%
mutate(on_time = ifelse(arr_delay <= 0, 'on time', 'delayed'))
final_q%>%
group_by(dep_type) %>%
summarise(ot_arr_rate = sum(on_time == 'on time')/n())
View(final_q)
nycflights %>%
group_by(month) %>%
summarise(median_dd = median(dep_delay)) %>%
arrange(desc(median_dd))
sfo_feb_flights <- nycflights %>%
filter(dest == "SFO", month == 2)
dim(sfo_feb_flights)
ggplot(data = sfo_feb_flights, aes(x=arr_delay))+
geom_histogram(binwidth = 15)
sfo_feb_flights %>%
group_by(carrier) %>%
summarise(iqr = IQR(arr_delay)) %>%
arrange(desc(iqr))
nycflights %>%
group_by(month)%>%
summarise(mean_dd = mean(dep_delay)) %>%
arrange(desc(mean_dd))
nycflights <- nycflights %>%
mutate(dep_type = ifelse(dep_delay <5, 'on time', 'delayed'))
nycflights %>%
group_by(origin)%>%
summarise(ot_dep_rate = sum(dep_type == 'on time')/n()) %>%
arrange(desc(ot_dep_rate))
